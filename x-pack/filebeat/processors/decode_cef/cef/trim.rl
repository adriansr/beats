// Code generated by ragel DO NOT EDIT.
package cef

import (
    "fmt"
    //"os"
)

%%{
    machine trim;
    write data;
    variable cs cs;
    variable p p;
    variable pe pe;
}%%

func trimTrailingSpace(data string) string {
    n := len(data)
    if n == 0 {
        return data
    }
    cs, p, pe, eof, last := 0, n-1, -1, -1, n

    %%{
        action match {
            //fmt.Fprintf(os.Stderr, "XXX: Match at %d (%c): '%s'\n", p, cs, data[p:])
            p-=2
        }
        action on_err {
            //fmt.Fprintf(os.Stderr, "XXX: Error at %d (%c): '%s'\n", p, cs, data[p:])
            last = p + 1
        }
        action on_eof {
            //fmt.Fprintf(os.Stderr, "XXX: EOF at %d (%c)\n", p, cs)
            last = 0
        }

        trim = space* $match $!on_err $/on_eof;

        main := trim;
        write init;
        write exec;
    }%%

    return data[:last];
}
